{
  "calc_name" : "LLog",

  "calc_structure" : {
    "Atprop" : {
      "Atprop_Parametric" : {
        "type": ["string", "TermList"],
        "ascii" : "_ ( _ )",
        "latex" : "_ ( _ )",
        "isabelle" : "_ \\<lparr> _ \\<rparr>",
        "precedence": [320, 320, 320]
      },
      "Atprop" : {
        "type": "string",
        "ascii" : "_",
        "isabelle": "_ \\<^sub>F",
        "isabelle_se": "_ \\<^sub>F",
        "precedence": [320, 320]
      },
      "Atprop_Freevar" : {
        "type" : "string",
        "isabelle" : "?\\<^sub>A _",
        "isabelle_se" : "_",
        "ascii" : "A? _",
        "latex" : "? _",
        "precedence": [320, 320],
        "shallow" : false
      }
    },

    "Atterm" : {
      "Atterm": {
        "type": "string",
        "ascii": "TT? _",
        "isabelle": "_ \\<^sub>T",
        "isabelle_se": "_ \\<^sub>T",
        "precedence": [320, 320]
      },
      "Atterm_Freevar" : {
        "type": "string",
        "isabelle": "?\\<^sub>A\\<^sub>T _",
        "isabelle_se": "_",
        "ascii": "AT? _",
        "latex": "?_{AT} _",
        "precedence": [320, 320],
        "shallow": false
      }
    },

    "TermList" : {
      "Term_Atterm": {
        "type": "Term",
        "precedence": [310, 311]
      },
      "Term_Bin_Op": {
        "type": ["Term", "Term"],
        "ascii": "_ , _",
        "latex": "_ , _",
        "isabelle": "_ ,\\<^sub>T _",
        "isabelle_se": "_ ,\\<^sub>T _",
        "precedence": [310,310, 311]
      }
    },

    "Term" : {
      "Term_Atterm" : {
        "type": "Atterm",
        "isabelle" : "_ \\<^sub>A\\<^sub>T",
        "isabelle_se" : "_ \\<^sub>A\\<^sub>T",
        "precedence": [320, 330]
      },
      "Term_Freevar": {
        "type" : "string",
        "isabelle" : "?\\<^sub>T _",
        "isabelle_se" : "_",
        "ascii" : "T? _",
        "latex" : "?_T _",
        "latex_brackets": false,
        "precedence": [340, 330],
        "shallow" : false
      },
      "Term_Any" : {
        "isabelle" : "I\\<^sub>T",
        "ascii" : "*",
        "latex" : "*"
      },
      "Term_Concatenate": {
        "type" : ["Term", "Term"],
        "isabelle" : "_ \\<cdot>\\<^sub>T _",
        "isabelle_se" : "_ \\<cdot>\\<^sub>T _",
        "latex": "_ _",
        "ascii": "_ . _ ",
        "latex_brackets": false,
        "precedence": [330,330, 331]
      },
      "Term_Pair": {
        "type" : ["Term", "Term"],
        "isabelle" : "< _ , _ >",
        "isabelle_se" : "< _ , _ >",
        "latex": "< _ , _ >",
        "ascii": "< _ , _ >",
        "latex_brackets": false,
        "shallow": false,
        "precedence": [330,330, 331]
      }
    },

    "Term_Bin_Op": {
      "Term_Pair" : {
        "isabelle" : "++\\<^sub>T",
        "ascii" : "++",
        "latex" : "++"
      },
      "Term_Lambda": {
        "isabelle" : "ll\\<^sub>T",
        "ascii" : "ll",
        "latex" : "ll"
      }
    },

    "Formula" : {
      "Formula_Atprop" : {
        "type": "Atprop",
        "isabelle" : "_ \\<^sub>A\\<^sub>F",
        "isabelle_se" : "_ \\<^sub>A\\<^sub>F",
        "precedence": [320, 330]
      },
      "Formula_Freevar" : {
        "type" : "string",
        "isabelle" : "?\\<^sub>F _",
        "isabelle_se" : "_",
        "ascii" : "F? _",
        "latex" : "?_F _",
        "latex_brackets": false,
        "precedence": [340, 330],
        "shallow" : false
      },

      "Formula_Bin" : {
        "type" : ["Formula", "Formula_Bin_Op", "Formula"],
        "isabelle" : "B\\<^sub>F _",
        "shallow": false,
        "precedence": [330,330,330, 331]
      }
    },

    "Formula_Bin_Op" : {
      "Formula_Tensor" : {
        "isabelle" : "xx\\<^sub>F",
        "ascii" : "xx",
        "latex" : "\\otimes"
      },
      "Formula_Loli" : {
        "isabelle" : "-o\\<^sub>F",
        "ascii" : "-o",
        "latex" : "\\multimap"
      }
    },

    "Structure" : {
      "Structure_Term_Formula" : {
        "type": ["Term", "Formula"],
        "ascii": "_ : _",
        "latex": "_ : _",
        "isabelle" : "_ :\\<^sub>T\\<^sub>F _",
        "precedence": [310, 310, 320]
      },

      "Structure_Formula" : {
        "type": ["Formula"],
        "ascii": "_",
        "latex": "_",
        "isabelle" : "_ \\<^sub>S",
        "precedence": [330, 340]
      },

      "Structure_Freevar" : {
        "type" : "string",
        "isabelle" : "?\\<^sub>S _",
        "isabelle_se" : "_",
        "ascii" : "? _",
        "latex" : "? _",
        "latex_brackets": false,
        "precedence": [310, 310],
        "shallow" : false
      },

      "Structure_Zer" : {
        "type" : "Structure_Zer_Op",
        "isabelle" : "Z\\<^sub>S",
        "latex_brackets": false,
        "shallow": false,
        "precedence": [310, 310]
      },

      "Structure_Bin" : {
        "type" : ["Structure", "Structure_Bin_Op", "Structure"],
        "isabelle" : "B\\<^sub>S _",
        "shallow": false,
        "precedence": [310,310,310, 311]
      }
    },

    "Structure_Zer_Op" : {
      "Structure_Neutral" : {
        "isabelle" : "I\\<^sub>S",
        "ascii" : "I",
        "latex" : "\\cdot"
      }
    },

    "Structure_Bin_Op" : {
      "Structure_Comma" : {
        "isabelle" : ",\\<^sub>S",
        "ascii" : ",",
        "latex" : ","
      }
    },

    "Sequent" : {
      "Sequent_Structure" : {
        "type": "Structure"
      },

      "Sequent": {
        "type" : ["Structure", "Structure"],
        "isabelle" : "_ \\<turnstile>\\<^sub>S _",
        "ascii" : "_ |- _",
        "latex" : "_ \\vdash _",
        "latex_brackets": false,
        "precedence": [306, 306, 305]
      }
    }
  },

  "calc_structure_rules" : {
    "RuleZer" : {
      "Id" : {
        "ascii" : "Id",
        "latex" : "Id"
      }
    },

    "RuleCut" : {
      "SingleCut" : {
        "ascii" : "Cut",
        "latex" : "Cut",
        "locale" : "CutFormula f",
        "premise" : "(\\<lambda>x. Some [((?\\<^sub>S ''X'') \\<turnstile>\\<^sub>S f \\<^sub>S),(f \\<^sub>S \\<turnstile>\\<^sub>S (?\\<^sub>S ''Y''))])"
      }
    },

    "RuleStruct" : {
      "P_L"  : {
        "ascii" : "P_L",
        "latex" : "PL"
      },
      "P_R"  : {
        "ascii" : "P_R",
        "latex" : "PR"
      },
      "A_R"  : {
        "ascii" : "A_R",
        "latex" : "AR"
      },
      "A_R2"  : {
        "ascii" : "A_R2",
        "latex" : "AR"
      },
      "A_L"  : {
        "ascii" : "A_L",
        "latex" : "AL"
      },
      "A_L2"  : {
        "ascii" : "A_L2",
        "latex" : "AL"
      },
      "I_L_L"  : {
        "ascii" : "I_L_L",
        "latex" : "IL_L"
      },
      "I_L_L2"  : {
        "ascii" : "I_L_L2",
        "latex" : "IL_L"
      },
      "I_L_R"  : {
        "ascii" : "I_L_R",
        "latex" : "IL_R"
      },
      "I_L_R2"  : {
        "ascii" : "I_L_R2",
        "latex" : "IL_R"
      },
      "I_R_L"  : {
        "ascii" : "I_R_L",
        "latex" : "IR_L"
      },
      "I_R_L2"  : {
        "ascii" : "I_R_L2",
        "latex" : "IR_L"
      },
      "I_R_R"  : {
        "ascii" : "I_R_R",
        "latex" : "IR_R"
      },
      "I_R_R2"  : {
        "ascii" : "I_R_R2",
        "latex" : "IR_R"
      }
    },

    "RuleU" : {
      "Tensor_L" : {
        "ascii" : "xx_L",
        "latex" : "\\otimes_L"
      },
      "Loli_R" : {
        "ascii" : "lolli_R",
        "latex" : "\\multimap_R"
      }
    },

    "RuleBin" : {
      "Tensor_R" : {
        "ascii" : "xx_R",
        "latex" : "\\otimes_R"
      },
      "Loli_L" : {
        "ascii" : "lolli_L",
        "latex" : "\\multimap_L"
      }
    },

    "RuleNat" : {
      "Nat_Zero" : {
        "ascii" : "nat_0",
        "latex" : "nat_0"
      },
      "Nat_Suc" : {
        "ascii" : "nat_s",
        "latex" : "nat_s"
      }
    }
  },

  "rules" : {
    "RuleZer" : {
      "Id" : ["* : A?A |- * : A?A",    ""]
    },
    "RuleCut" : {
      "SingleCut" : ["?X, ?Z |- ?Y", "?X |- * : F?A",  "?Z, * : F?A |- ?Y"]
    },
    "RuleStruct": {
      "P_L" :    [
        "(?X1, ?X2), (?Y1, ?Y2) |- ?Z",
        "(?X1, ?Y1), (?X2, ?Y2) |- ?Z"
      ],
      "P_R" :    [
        "?Z |- (?Y1, ?Y2), (?X1, ?X2)",
        "?Z |- (?Y1, ?X1), (?Y2, ?X2)"
      ],
      "A_R" :    [
        "?X |- ?Y1 , (?Y2 , ?Y3)",
        "?X |- (?Y1 , ?Y2) , ?Y3"
      ],
      "A_R2" :    [
        "?X |- (?Y1 , ?Y2) , ?Y3",
        "?X |- ?Y1 , (?Y2 , ?Y3)"
      ],
      "A_L" :    [
        "?Y1 , (?Y2 , ?Y3) |- ?X",
        "(?Y1 , ?Y2) , ?Y3 |- ?X"
      ],
      "A_L2" :    [
        "(?Y1 , ?Y2) , ?Y3 |- ?X",
        "?Y1 , (?Y2 , ?Y3) |- ?X"
      ],
      "I_L_L" :   [
        "?X |- ?Y",
        "I, ?X |- ?Y"
      ],
      "I_L_L2" :   [
        "I, ?X |- ?Y",
        "?X |- ?Y"
      ],
      "I_L_R" :   [
        "?X |- ?Y",
        "?X, I |- ?Y"
      ],
      "I_L_R2" :   [
        "?X, I |- ?Y",
        "?X |- ?Y"
      ],
      "I_R_L" :   [
        "?X |- ?Y",
        "?X |- I, ?Y"
      ],
      "I_R_L2" :   [
        "?X |- I, ?Y",
        "?X |- ?Y"
      ],
      "I_R_R" :   [
        "?X |- ?Y",
        "?X |- ?Y, I"
      ],
      "I_R_R2" :   [
        "?X |- ?Y, I",
        "?X |- ?Y"
      ]
    },
    "RuleU" : {
      "Tensor_L" :    ["?X, * : F?A xx F?B |- * : F?C",    "?X, (* : F?A, * : F?B) |- * : F?C"],
      "Loli_R" :   ["?X |- * : F?A -o F?B",    "?X, * : F?A |- * : F?B"]
    },
    "RuleBin" : {
      "Tensor_R" :   ["?X, ?Y |- * : F?A xx F?B", "?X |- * : F?A", "?Y |- * : F?B"],
      "Loli_L": ["?X, ?Y, * : F?A -o F?B |- * : F?C", "?X |- * : F?A", "?Y, * : F?B |- * : F?C"]
    },
    "RuleNat" : {
      "Nat_Zero": [
        "?X |- TT? Z : NNat", ""
      ],
      "Nat_Suc": [
        "?X |- TT? S. T? n: NNat", "?X |- T? n: NNat"
      ]
    }
  }
}
