bin : type.

e : bin.
1 bin : bin.
0 bin : bin.

plus bin bin bin: bwd.

inc bin bin: bwd.

inc (0 X) (1 X)
  .

inc e (1 e)
  .

inc (1 X) (0 Y)
  <- inc X Y
  .

plus e e e.
plus e (0 N) (0 N).
plus e (1 N) (1 N).

plus (0 M) e     (0 M).
plus (0 M) (0 N) (0 R)
  <- plus M N R
  .
plus (0 M) (1 N) (1 R)
  <- plus M N R
  .

plus (1 M) e     (1 R).
plus (1 M) (0 N) (1 R)
  <- plus M N R
  .

plus (1 M) (1 N) (0 R)
  <- plus M N Q
  <- inc Q R
  .


gas X
-o
plus (1 1 e) X Y * gas Y
.

% this should be compiled down to:
% gas (T? X) -o ( plus(TT? 1 . TT? 1 . TT? e, T? X, T? Y) * gas(T? Y) )


context init = {
  gas (1 1 e)
}.


% plus z N N.

% this has to be translated to:
%
% ---------------------------------   axiomatic
% I |- -- : plus(TT? z, T? N, T? N)


% plus (s N) M (s P)
%  <- plus N M P
%  .

% this has to be translated to:
%
% I |- -- : plus(       T? N, T? M,        T? P)
% ----------------------------------------------   rule
% I |- -- : plus(TT? s. T? N, T? M, TT? s. T? P)
