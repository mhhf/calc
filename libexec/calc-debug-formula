#!/usr/bin/env node

const calc = require('../ll.json');
const helper = require("../lib/helper.js");
const SHA3 = require("sha3");
const sha3 = str => {
  var d = new SHA3.SHA3Hash(224);
  d.update(str);
  return d.digest('hex');
}
const Node = require("../lib/node.js");
// const Node = grammarNode(calc);

const Calc = require("../lib/calc.js");
Calc.init(calc);
const calcParser = require("../lib/parser.js");
const Parser = calcParser();
const grammar = Parser.grammar;
const parser = Parser.parser;

var JisonLex = require('jison-lex');
var lexer = new JisonLex(grammar.lex);

let args = process.argv.slice(2);

let formulaStr = "(?X, ?X), ?Y |- < AT? B , AT? C > : F?A xx F?B";
const formula = args && args[0] || formulaStr;

console.log(formula);

// console.log(lexer.setInput(formula));
// // console.log(parser.lexer.begin());
// while (!lexer.done) {
//   console.log(lexer.lex(), lexer.yytext);
// }
let node = parser.parse(formula)
let tree_str = Node.formatTree({
  rules: Calc.db.rules,
  node,
  attrs: [ "name", "ascii", "ownprecedence" ]
});

console.log(tree_str);

let str = Node.toString(node, {
  style: "ascii",
  brackets: true,
  rules: Calc.db.rules
});

console.log("\n\n", str);
