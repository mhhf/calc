#!/usr/bin/env node
// TODO - to get rid of shift-reduce conflicts for "e bin_op e" expressions, I cannot have non-terminal bin_op rules, therefore they should be propagated up to generate multiple "e '+' e" rules.

const ncp = require("copy-paste");

const DEBUG = !!process.env["DEBUG"];
const args = process.argv.slice(2);
let formulaStr = "(?X, ?X), ?Y |- < AT? B , AT? C > : F?A xx F?B";
const formula = args && args[0] || formulaStr;

const grammarNode = require("../lib/node.js");
const Node = grammarNode(calc);

const calc = require('../ll.json');
const calcParser = require("../lib/parser.js");
const parser = calcParser(calc).parser;


let node = parser.parse(formula)
let tree_str = Node.formatTree({
  calc,
  node,
  attrs: [ "location", "ownprecedence" ]
});


let latex_str = node.toString({style: "isabelle_se", brackets: true});

ncp.copy("(" + latex_str + ")")

console.log("String copied to clipboard:\n" + latex_str);
