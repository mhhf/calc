#!/usr/bin/env node
// TODO - to get rid of shift-reduce conflicts for "e bin_op e" expressions, I cannot have non-terminal bin_op rules, therefore they should be propagated up to generate multiple "e '+' e" rules.

const compare = require("../lib/compare.js");
const sub = require("../lib/substitute.js");

const DEBUG = !!process.env["DEBUG"];
const args = process.argv.slice(2);
let formulaStr = "I |- * : Even(TT? S. TT? S. TT? S. TT? S. TT? Z)";
let formulaStr2 = "I |- * : even(TT? S. TT? S. T? n)";

const f1 = args && args[0] || formulaStr;
const f2 = args && args[1] || formulaStr2;

const calc = require('../ll.json');
const calcParser = require("../lib/parser.js");
const parser = calcParser(calc).parser;

let n1 = parser.parse(f1)
let n2 = parser.parse(f2)

console.log(`comparing:\n 1.  ${n1.toString()}\n 2.  ${n2.toString()}\n`);

let unifier = compare(n1, n2, {debug: true});
console.log(unifier);
